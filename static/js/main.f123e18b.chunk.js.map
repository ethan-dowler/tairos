{"version":3,"sources":["data/EnemyTypes/Monster1.js","components/HealthModifier/HealthModifier.js","components/HealthModifier/index.js","components/Enemy/Enemy.js","components/Enemy/index.js","components/Status/Status.js","components/Status/index.js","components/StatusBar/StatusBar.js","components/StatusBar/index.js","components/EngagedWithSelector/EngagedWithSelector.js","components/EngagedWithSelector/index.js","components/EnemyArea/EnemyArea.js","components/EnemyArea/index.js","data/DeckTypes/Arcanist.js","data/DeckTypes/Brawler.js","data/DeckTypes/Elementalist.js","data/DeckTypes/Guardian.js","data/DeckTypes/Ranger.js","data/DeckTypes/Shadow.js","data/DeckTypes/Squire.js","data/DeckTypes/Tactician.js","util/shuffle.js","util/tally.js","components/Deck/Deck.js","components/Deck/index.js","data/SkillTypes/Strike.js","data/SkillTypes/Block.js","data/SkillTypes/Grapple.js","data/SkillTypes/Shoot.js","data/SkillTypes/Evade.js","data/SkillTypes/Hasten.js","data/SkillTypes/Burn.js","data/SkillTypes/Freeze.js","data/SkillTypes/Shock.js","data/SkillTypes/Bolster.js","data/SkillTypes/Inspire.js","data/SkillTypes/Coordinate.js","data/SkillTypes/Blast.js","data/SkillTypes/Unleash.js","data/SkillTypes/Protect.js","data/SkillTypes/Misdirect.js","data/SkillTypes/Sneak.js","data/SkillTypes/Mimic.js","data/SkillTypes/Flurry.js","data/SkillTypes/Tackle.js","data/SkillTypes/Counter.js","data/SkillTypes/Fetch.js","data/SkillTypes/Accompany.js","data/SkillTypes/Resupply.js","components/Skill/Skill.js","components/Skill/index.js","components/Player/Player.js","components/Player/index.js","components/PlayerArea/PlayerArea.js","components/PlayerArea/index.js","components/App/App.js","index.js"],"names":["Monster1","name","maxHealth","attack","DAMAGE_AMOUNTS","HealthModifier","takeDamage","handleClick","e","amount","parseInt","target","dataset","className","map","onClick","data-amount","key","Math","random","Enemy","enemyData","EnemyTypes","props","type","state","damageTaken","number","newDamageTaken","setState","render","PureComponent","Status","label","stackable","StatusBar","isEnemy","ENGAGED_WITH_OPTIONS","EngagedWithSelector","option","EnemyArea","Arcanist","skills","Brawler","Elementalist","Guardian","Ranger","Shadow","Squire","Tactician","shuffle","array","i","j","temp","length","floor","tally","item","reduce","totalCount","element","DrawPile","numberOfCards","onDraw","onMill","join","DiscardPile","skillsInDiscard","onFetch","skill","numberInDiscard","Deck","deckData","DeckTypes","skillsInDeck","drawMode","removeTopSkill","deckContents","shift","drawSkill","millSkill","fetchSkill","unshift","toggleDrawMode","undefined","this","Strike","title","lines","Block","Grapple","Shoot","Evade","Hasten","Burn","Freeze","Shock","Bolster","Inspire","Coordinate","Blast","Unleash","Protect","Misdirect","Sneak","Mimic","Flurry","Tackle","Counter","Fetch","Accompany","Resupply","Skill","onPlay","data","SkillTypes","line","Player","skillsInHand","addToHand","handContents","push","removeFromHand","indexOfSkill","indexOf","splice","addToDiscard","discardContents","removeFromDiscard","deckOneType","deckTwoType","sort","PlayerArea","AppContext","React","createContext","App","wideMode","toggleWideMode","Provider","value","body","document","querySelector","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.f123e18b.chunk.js","sourcesContent":["const Monster1 = {\n  name: 'Monster 1',\n  maxHealth: 20,\n  attack: 4,\n}\n\nexport default Monster1\n","import React from 'react'\n\nconst DAMAGE_AMOUNTS = [-2, -1, 1, 2, 3, 4, 5, 6]\n\nconst HealthModifier = ({ takeDamage }) => {\n  let handleClick = e => {\n    let amount = parseInt(e.target.dataset.amount)\n    takeDamage(amount)\n  }\n\n  return (\n    <div className=\"HealthModifier\">\n      <div className=\"HealthModifier-title\">Modify Health</div>\n\n      <div className=\"HealthModifier-buttons\">\n        {DAMAGE_AMOUNTS.map(amount => (\n          <button\n            className=\"HealthModifier-button\"\n            onClick={handleClick}\n            data-amount={amount}\n            key={Math.random()}\n          >\n            {amount < 0 && '+'}\n            {amount * -1}\n          </button>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default HealthModifier\n","import HealthModifier from './HealthModifier'\nimport './HealthModifier.scss'\nexport default HealthModifier\n","import React, { PureComponent } from 'react'\nimport * as EnemyTypes from '../../data/EnemyTypes'\nimport HealthModifier from '../HealthModifier'\n\nclass Enemy extends PureComponent {\n  enemyData = EnemyTypes[this.props.type]\n\n  state = {\n    damageTaken: 0,\n  }\n\n  takeDamage = number => {\n    let newDamageTaken = this.state.damageTaken + number\n    if (newDamageTaken > this.enemyData.maxHealth)\n      newDamageTaken = this.enemyData.maxHealth\n\n    this.setState({ damageTaken: newDamageTaken })\n  }\n\n  render = () => (\n    <div className=\"Enemy\">\n      <div className=\"Enemy-name\">{this.enemyData.name}</div>\n      <div className=\"Enemy-stats\">\n        <div className=\"Enemy-health\">\n          Health: {this.enemyData.maxHealth - this.state.damageTaken}\n        </div>\n        <div className=\"Enemy-attack\">Attack: {this.enemyData.attack}</div>\n      </div>\n      <HealthModifier takeDamage={this.takeDamage} />\n    </div>\n  )\n}\n\nexport default Enemy\n","import Enemy from './Enemy'\nimport './Enemy.scss'\nexport default Enemy\n","import React from 'react'\n\nconst Status = ({ label, stackable = false }) => (\n  <div className=\"Status\">\n    <label>\n      {stackable ? <input type=\"number\" /> : <input type=\"checkbox\" />}\n      <span className=\"Status-label\">{label}</span>\n    </label>\n  </div>\n)\n\nexport default Status\n","import Status from './Status'\nimport './Status.scss'\nexport default Status\n","import React from 'react'\nimport Status from '../Status'\n\nconst StatusBar = ({ isEnemy = false }) => (\n  <div className=\"StatusBar\">\n    {!isEnemy && <Status label=\"Fatigue\" stackable={true} />}\n    <Status label=\"Stun\" />\n    {isEnemy && <Status label=\"Chill\" />}\n    {isEnemy && <Status label=\"Scorch (max 3)\" stackable={true} />}\n  </div>\n)\n\nexport default StatusBar\n","import StatusBar from './StatusBar'\nimport './StatusBar.scss'\nexport default StatusBar\n","import React from 'react'\n\nconst ENGAGED_WITH_OPTIONS = ['None', 'Red', 'Blue', 'Green', 'Yellow']\n\nconst EngagedWithSelector = () => (\n  <label>\n    <span className=\"EngagedWithSelector-label\">Engaged With:</span>\n    <select className=\"EngagedWithSelector\">\n      {ENGAGED_WITH_OPTIONS.map(option => (\n        <option key={Math.random()}>{option}</option>\n      ))}\n    </select>\n  </label>\n)\n\nexport default EngagedWithSelector\n","import EngagedWithSelector from './EngagedWithSelector'\nimport './EngagedWithSelector.scss'\nexport default EngagedWithSelector\n","import React from 'react'\nimport Enemy from '../Enemy'\nimport StatusBar from '../StatusBar'\nimport EngagedWithSelector from '../EngagedWithSelector'\n\nconst EnemyArea = ({ name, ...props }) => {\n  return (\n    <div className=\"EnemyArea\">\n      <div className=\"EnemyArea-name\">{name}</div>\n      <EngagedWithSelector />\n      <StatusBar isEnemy={true} />\n      <div className=\"EnemyArea-card\">\n        <Enemy {...props} />\n      </div>\n    </div>\n  )\n}\n\nexport default EnemyArea\n","import EnemyArea from './EnemyArea'\nimport './EnemyArea.scss'\nexport default EnemyArea\n","const Arcanist = {\n  name: 'Arcanist',\n  skills: ['Blast', 'Protect', 'Unleash'],\n}\n\nexport default Arcanist\n","const Brawler = {\n  name: 'Brawler',\n  skills: ['Counter', 'Flurry', 'Tackle'],\n}\n\nexport default Brawler\n","const Elementalist = {\n  name: 'Elementalist',\n  skills: ['Burn', 'Freeze', 'Shock'],\n}\n\nexport default Elementalist\n","const Guardian = {\n  name: 'Guardian',\n  skills: ['Block', 'Grapple', 'Strike'],\n}\n\nexport default Guardian\n","const Ranger = {\n  name: 'Ranger',\n  skills: ['Evade', 'Hasten', 'Shoot'],\n}\n\nexport default Ranger\n","const Shadow = {\n  name: 'Shadow',\n  skills: ['Mimic', 'Misdirect', 'Sneak'],\n}\n\nexport default Shadow\n","const Squire = {\n  name: 'Squire',\n  skills: ['Accompany', 'Fetch', 'Resupply'],\n}\n\nexport default Squire\n","const Tactician = {\n  name: 'Tactician',\n  skills: ['Bolster', 'Coordinate', 'Inspire'],\n}\n\nexport default Tactician\n","// the Fisher-Yates shuffle in JS\n// randomize the contents of an Array\nconst shuffle = array => {\n  var i = 0,\n    j = 0,\n    temp = null\n\n  for (i = array.length - 1; i > 0; i -= 1) {\n    j = Math.floor(Math.random() * (i + 1))\n    temp = array[i]\n    array[i] = array[j]\n    array[j] = temp\n  }\n  return array\n}\n\nexport default shuffle\n","const tally = (array, item) =>\n  array.reduce((totalCount, element) => {\n    if (element === item) return totalCount + 1\n    else return totalCount\n  }, 0)\n\nexport default tally\n","import React, { PureComponent, Fragment } from 'react'\nimport * as DeckTypes from '../../data/DeckTypes'\nimport shuffle from '../../util/shuffle'\nimport tally from '../../util/tally'\n\nconst DrawPile = ({ skills, numberOfCards, onDraw, onMill }) => (\n  <Fragment>\n    <div className=\"Deck-skills\">{skills.join(', ')}</div>\n    <div className=\"Deck-drawPileSize\">Deck: {numberOfCards}</div>\n    <div className=\"Deck-actions\">\n      {!!numberOfCards && <button onClick={onDraw}>Draw</button>}\n      {!!numberOfCards && <button onClick={onMill}>Mill</button>}\n    </div>\n  </Fragment>\n)\n\nconst DiscardPile = ({ skills, skillsInDiscard, onFetch }) => (\n  <Fragment>\n    {skills.map(skill => {\n      let numberInDiscard = tally(skillsInDiscard, skill)\n\n      return (\n        <div className=\"Deck-discardCount\" key={Math.random()}>\n          {skill}: {numberInDiscard}{' '}\n          {!!numberInDiscard && (\n            <button name={skill} onClick={onFetch}>\n              Fetch\n            </button>\n          )}\n        </div>\n      )\n    })}\n  </Fragment>\n)\n\nclass Deck extends PureComponent {\n  deckData = DeckTypes[this.props.type]\n\n  state = {\n    skillsInDeck: shuffle([\n      ...this.deckData.skills,\n      ...this.deckData.skills,\n      ...this.deckData.skills,\n      ...this.deckData.skills,\n      ...this.deckData.skills,\n    ]),\n    drawMode: true,\n  }\n\n  removeTopSkill = () => {\n    let deckContents = [...this.state.skillsInDeck]\n    if (!deckContents.length) return\n\n    let skill = deckContents.shift()\n    this.setState({ skillsInDeck: deckContents })\n    return skill\n  }\n\n  drawSkill = () => {\n    let skill = this.removeTopSkill()\n    this.props.onDraw(skill)\n  }\n\n  millSkill = () => {\n    let skill = this.removeTopSkill()\n    this.props.onMill(skill)\n  }\n\n  fetchSkill = skill => {\n    if (!skill) return\n\n    let deckContents = [...this.state.skillsInDeck]\n    deckContents.unshift(skill)\n    this.setState({ skillsInDeck: deckContents })\n  }\n\n  onFetch = e => {\n    let skill = e.target.name\n    this.fetchSkill(skill)\n    this.props.onFetch(skill)\n  }\n\n  toggleDrawMode = () => this.setState({ drawMode: !this.state.drawMode })\n\n  render() {\n    if (this.deckData === undefined)\n      return <div>Unknown Deck Type: {this.props.type}</div>\n\n    return (\n      <div className=\"Deck\">\n        <div className=\"Deck-name\">{this.deckData.name}</div>\n        <button className=\"Deck-modeToggle\" onClick={this.toggleDrawMode}>\n          View {this.state.drawMode ? 'Discard' : 'Deck'}\n        </button>\n        {this.state.drawMode ? (\n          <DrawPile\n            skills={this.deckData.skills}\n            numberOfCards={this.state.skillsInDeck.length}\n            onDraw={this.drawSkill}\n            onMill={this.millSkill}\n          />\n        ) : (\n          <DiscardPile\n            skills={this.deckData.skills}\n            skillsInDiscard={this.props.skillsInDiscard}\n            onFetch={this.onFetch}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Deck\n","import Deck from './Deck'\nimport './Deck.scss'\nexport default Deck\n","const Strike = {\n  title: 'Strike',\n  lines: [\n    'Deal 3 damage.',\n    'If you are engaged with the target, deal 5 damage instead.',\n  ],\n}\n\nexport default Strike\n","const Block = {\n  title: '⚡ Block',\n  lines: [\n    'Prevent up to 2 damage from an enemy attack.',\n    'If you Block a Forced Attacked, you are attacked instead and gain Inspiration.',\n  ],\n}\n\nexport default Block\n","const Grapple = {\n  title: 'Grapple',\n  lines: [\n    'Stun an enemy that attacked you this round.',\n    '~~ or ~~',\n    'Stun an enemy that is not engaged with another player.',\n  ],\n}\n\nexport default Grapple\n","const Shoot = {\n  title: 'Shoot',\n  lines: [\n    'Deal 3 damage.',\n    'If you took no damage this Round, deal 5 damage instead.',\n  ],\n}\n\nexport default Shoot\n","const Evade = {\n  title: '⚡ Evade',\n  lines: [\n    'Prevent 1 damage to you.',\n    '~~ and/or ~~',\n    'Prevent 1 status from being applied to you.',\n  ],\n}\n\nexport default Evade\n","const Hasten = {\n  title: 'Hasten',\n  lines: ['Draw 2 cards.', 'You may take another Action.'],\n}\n\nexport default Hasten\n","const Burn = {\n  title: 'Burn',\n  lines: [\n    'Scorch an enemy.',\n    'Deal 3 damage to each enemy for each Scorch on them.',\n    'Each enemy cannot be Scorched more than three times.',\n  ],\n}\n\nexport default Burn\n","const Freeze = {\n  title: 'Freeze',\n  lines: [\n    'Deal 3 damage and Chill the target.',\n    'If the target is already Chilled, Stun them instead.',\n  ],\n}\n\nexport default Freeze\n","const Shock = {\n  title: '⚡ Shock',\n  lines: [\n    'Draw a card.',\n    'Deal 2 damage to all Scorched enemies.',\n    'Prevent 2 damage from all Chilled enemies (if they are attacking).',\n  ],\n}\n\nexport default Shock\n","const Bolster = {\n  title: 'Bolster',\n  lines: [\n    'Restore 2 Health to any player.',\n    'Remove or duplicate 1 status on any player.',\n  ],\n}\n\nexport default Bolster\n","const Inspire = {\n  title: 'Inspire',\n  lines: ['All players draw a card and gain Inspiration.'],\n}\n\nexport default Inspire\n","const Coordinate = {\n  title: '⚡ Coordinate',\n  lines: [\n    'Play when an ally deals 5 or more damage to deal 5 damage.',\n    'You may target a different enemy.',\n  ],\n}\n\nexport default Coordinate\n","const Blast = {\n  title: 'Blast',\n  lines: ['Deal 4 damage.', 'If you discard this, draw a card'],\n}\n\nexport default Blast\n","const Unleash = {\n  title: 'Unleash',\n  lines: [\n    'Multi-target',\n    'Deal 2 damage. You may discard up to 2 cards to deal 3 more damage per card.',\n  ],\n}\n\nexport default Unleash\n","const Protect = {\n  title: '⚡ Protect',\n  lines: [\n    'Multi-target',\n    'Prevent 1 damage.',\n    'You may discard up to two cards to prevent 3 more damage per card.',\n  ],\n}\n\nexport default Protect\n","const Misdirect = {\n  title: '⚡ Misdirect',\n  lines: [\n    'Play when an enemy attacks to prevent up to 2 damage and deal 2 damage to a different enemy.',\n  ],\n}\n\nexport default Misdirect\n","const Sneak = {\n  title: 'Sneak',\n  lines: ['If you are not engaged with an enemy, deal 6 damage.'],\n}\n\nexport default Sneak\n","const Mimic = {\n  title: 'Mimic',\n  lines: [\n    \"While this is in your hand, treat it as if it were any card in an ally's hand\",\n  ],\n}\n\nexport default Mimic\n","const Flurry = {\n  title: 'Flurry',\n  lines: [\n    'Multi-target',\n    'Deal 1 damage.',\n    'Mill up to 5 cards to deal 1 more damage per card.',\n  ],\n}\n\nexport default Flurry\n","const Tackle = { title: 'Tackle', lines: ['Deal 6 damage.', 'Take 1 damage.'] }\n\nexport default Tackle\n","const Counter = {\n  title: '⚡ Counter',\n  lines: [\n    'Play when you are attacked to deal 2 damage to your attacker and draw a card.',\n    'If this damage defeats them, they deal no damage.',\n  ],\n}\n\nexport default Counter\n","const Fetch = {\n  title: 'Fetch',\n  lines: [\n    'Restore 1 Health to each player.',\n    'Each player may place 1 of their discarded cards (other than Fetch) on top of its deck.',\n  ],\n}\n\nexport default Fetch\n","const Accompany = {\n  title: '⚡ Accompany',\n  lines: [\n    'Play when an ally is attacked to prevent 1 damage, deal 1 damage to the attacker, and draw a card.',\n  ],\n}\n\nexport default Accompany\n","const Resupply = {\n  title: 'Resupply',\n  lines: ['An ally draws 2 cards.', 'You may take another Action.'],\n}\n\nexport default Resupply\n","import React from 'react'\nimport * as SkillTypes from '../../data/SkillTypes'\n\nconst Skill = ({ type, onPlay }) => {\n  const data = SkillTypes[type]\n  if (data === undefined) return <div>Unknown Skill Type: {type}</div>\n\n  let onClick = () => onPlay(type)\n\n  return (\n    <div className=\"Skill\">\n      <button className=\"Skill-play\" name={type} onClick={onClick}>\n        Play\n      </button>\n      <div className=\"Skill-title\">{data.title}</div>\n      <div className=\"Skill-body\">\n        {data.lines.map(line => (\n          <div className=\"Skill-bodyLine\" key={Math.random()}>\n            {line}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Skill\n","import Skill from './Skill'\nimport './Skill.scss'\nexport default Skill\n","import React, { PureComponent } from 'react'\nimport Deck from '../Deck'\nimport Skill from '../Skill'\nimport StatusBar from '../StatusBar'\nimport HealthModifier from '../HealthModifier'\n\nclass Player extends PureComponent {\n  maxHealth = 16\n\n  state = {\n    damageTaken: 0,\n    skillsInHand: [],\n    skillsInDiscard: [],\n  }\n\n  addToHand = skill => {\n    let handContents = [...this.state.skillsInHand]\n    handContents.push(skill)\n    this.setState({ skillsInHand: handContents })\n  }\n\n  removeFromHand = skill => {\n    let handContents = [...this.state.skillsInHand]\n    let indexOfSkill = handContents.indexOf(skill)\n    handContents.splice(indexOfSkill, 1)\n    this.setState({ skillsInHand: handContents })\n  }\n\n  addToDiscard = skill => {\n    let discardContents = [...this.state.skillsInDiscard]\n    discardContents.push(skill)\n    this.setState({ skillsInDiscard: discardContents })\n  }\n\n  removeFromDiscard = skill => {\n    let discardContents = [...this.state.skillsInDiscard]\n    let indexOfSkill = discardContents.indexOf(skill)\n    discardContents.splice(indexOfSkill, 1)\n    this.setState({ skillsInDiscard: discardContents })\n  }\n\n  onDraw = skill => this.addToHand(skill)\n\n  onMill = skill => this.addToDiscard(skill)\n\n  onFetch = skill => this.removeFromDiscard(skill)\n\n  onPlay = skill => {\n    this.removeFromHand(skill)\n    this.addToDiscard(skill)\n  }\n\n  takeDamage = number => {\n    let newDamageTaken = this.state.damageTaken + number\n    if (newDamageTaken > this.maxHealth) newDamageTaken = this.maxHealth\n\n    this.setState({ damageTaken: newDamageTaken })\n  }\n\n  render = () => (\n    <div className=\"Player\">\n      <div className=\"Player-health\">\n        Health: {this.maxHealth - this.state.damageTaken}\n      </div>\n      <StatusBar />\n      <HealthModifier takeDamage={this.takeDamage} />\n\n      <div className=\"Player-cards\">\n        <div className=\"Player-deck Player-deck--one\">\n          <Deck\n            type={this.props.deckOneType}\n            skillsInDiscard={this.state.skillsInDiscard}\n            onDraw={this.onDraw}\n            onMill={this.onMill}\n            onFetch={this.onFetch}\n          />\n        </div>\n\n        <div className=\"Player-deck Player-deck--two\">\n          <Deck\n            type={this.props.deckTwoType}\n            skillsInDiscard={this.state.skillsInDiscard}\n            onDraw={this.onDraw}\n            onMill={this.onMill}\n            onFetch={this.onFetch}\n          />\n        </div>\n\n        <div className=\"Player-hand\">\n          {this.state.skillsInHand.sort().map(type => (\n            <Skill type={type} onPlay={this.onPlay} key={Math.random()} />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Player\n","import Player from './Player'\nimport './Player.scss'\nexport default Player\n","import React from 'react'\nimport Player from '../Player'\n\nconst PlayerArea = ({ name, ...props }) => {\n  return (\n    <div className=\"PlayerArea\">\n      <div className=\"PlayerArea-name\">{name}</div>\n      <Player {...props} />\n    </div>\n  )\n}\n\nexport default PlayerArea\n","import PlayerArea from './PlayerArea'\nimport './PlayerArea.scss'\nexport default PlayerArea\n","import React, { PureComponent } from 'react'\nimport EnemyArea from '../EnemyArea'\nimport PlayerArea from '../PlayerArea'\n\nconst AppContext = React.createContext({})\n\nclass App extends PureComponent {\n  state = {\n    wideMode: false,\n  }\n\n  toggleWideMode = () => {\n    this.setState({ wideMode: !this.state.wideMode })\n  }\n\n  render = () => (\n    <AppContext.Provider value={this}>\n      <div className={`App ${this.state.wideMode ? 'wide-mode' : ''}`}>\n        <h1 className=\"App-heading\">Welcome to Tairos</h1>\n\n        <button onClick={this.toggleWideMode}>Toggle Wide Mode</button>\n\n        <div className=\"App-content\">\n          <div className=\"App-contentArea App-contentArea--enemies\">\n            <EnemyArea name=\"Enemy\" type=\"Monster1\" />\n            <EnemyArea name=\"Enemy\" type=\"Monster1\" />\n            <EnemyArea name=\"Enemy\" type=\"Monster1\" />\n          </div>\n\n          <div className=\"App-contentArea App-contentArea--players\">\n            <PlayerArea\n              name=\"Red\"\n              deckOneType=\"Guardian\"\n              deckTwoType=\"Tactician\"\n            />\n            <PlayerArea\n              name=\"Blue\"\n              deckOneType=\"Ranger\"\n              deckTwoType=\"Elementalist\"\n            />\n            <PlayerArea\n              name=\"Green\"\n              deckOneType=\"Arcanist\"\n              deckTwoType=\"Shadow\"\n            />\n            <PlayerArea\n              name=\"Yellow\"\n              deckOneType=\"Brawler\"\n              deckTwoType=\"Squire\"\n            />\n          </div>\n        </div>\n      </div>\n    </AppContext.Provider>\n  )\n}\n\nexport { App as default, AppContext }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nimport './index.scss'\nimport './vendor/normalize.scss'\n\nconst body = document.querySelector('body')\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  body\n)\n"],"sourceRoot":""}