{"version":3,"sources":["data/EnemyTypes/Monster1.js","components/Enemy/Enemy.js","components/Enemy/index.js","components/EnemyArea/EnemyArea.js","components/EnemyArea/index.js","data/DeckTypes/Arcanist.js","data/DeckTypes/Brawler.js","data/DeckTypes/Elementalist.js","data/DeckTypes/Guardian.js","data/DeckTypes/Ranger.js","data/DeckTypes/Shadow.js","data/DeckTypes/Squire.js","data/DeckTypes/Tactician.js","util/shuffle.js","util/tally.js","components/Deck/Deck.js","components/Deck/index.js","data/SkillTypes/Strike.js","data/SkillTypes/Block.js","data/SkillTypes/Grapple.js","data/SkillTypes/Shoot.js","data/SkillTypes/Evade.js","data/SkillTypes/Hasten.js","data/SkillTypes/Burn.js","data/SkillTypes/Freeze.js","data/SkillTypes/Shock.js","data/SkillTypes/Bolster.js","data/SkillTypes/Inspire.js","data/SkillTypes/Coordinate.js","data/SkillTypes/Blast.js","data/SkillTypes/Unleash.js","data/SkillTypes/Protect.js","data/SkillTypes/Misdirect.js","data/SkillTypes/Sneak.js","data/SkillTypes/Mimic.js","data/SkillTypes/Flurry.js","data/SkillTypes/Tackle.js","data/SkillTypes/Counter.js","data/SkillTypes/Fetch.js","data/SkillTypes/Accompany.js","data/SkillTypes/Resupply.js","components/Skill/Skill.js","components/Skill/index.js","components/Player/Player.js","components/Player/index.js","components/PlayerArea/PlayerArea.js","components/PlayerArea/index.js","components/App/App.js","index.js"],"names":["Monster1","name","health","attack","Enemy","type","damageTaken","data","EnemyTypes","undefined","className","EnemyArea","props","Arcanist","skills","Brawler","Elementalist","Guardian","Ranger","Shadow","Squire","Tactician","shuffle","array","i","j","temp","length","Math","floor","random","tally","item","reduce","totalCount","element","DrawPile","numberOfCards","onDraw","join","onClick","DiscardPile","skillsInDiscard","onFetch","map","skill","key","Deck","deckData","DeckTypes","state","skillsInDeck","drawMode","drawSkill","deckContents","shift","setState","fetchSkill","console","log","unshift","e","target","toggleDrawMode","this","PureComponent","Strike","title","lines","Block","Grapple","Shoot","Evade","Hasten","Burn","Freeze","Shock","Bolster","Inspire","Coordinate","Blast","Unleash","Protect","Misdirect","Sneak","body","Mimic","Flurry","Tackle","Counter","Fetch","Accompany","Resupply","Skill","onPlay","SkillTypes","line","Player","skillsInHand","addToHand","handContents","push","removeFromHand","indexOfSkill","indexOf","splice","addToDiscard","discardContents","removeFromDiscard","render","deckOneType","deckTwoType","sort","PlayerArea","AppContext","React","createContext","App","playerOne","playerTwo","playerThree","playerFour","enemyOne","enemyTwo","enemyThree","Provider","value","main","document","querySelector","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.0a1c453b.chunk.js","sourcesContent":["const Monster1 = {\n  name: 'Monster 1',\n  health: 20,\n  attack: 4,\n}\n\nexport default Monster1\n","import React from 'react'\nimport * as EnemyTypes from '../../data/EnemyTypes'\n\nconst Enemy = ({ type, damageTaken = 0 }) => {\n  const data = EnemyTypes[type]\n  if (data === undefined) return <div>Unknown Enemy Type: {type}</div>\n\n  return (\n    <div className=\"Enemy\">\n      <div className=\"Enemy-name\">{data.name}</div>\n      <div className=\"Enemy-health\">Health: {data.health - damageTaken}</div>\n      <div className=\"Enemy-attack\">Attack: {data.attack}</div>\n    </div>\n  )\n}\n\nexport default Enemy\n","import Enemy from './Enemy'\nimport './Enemy.scss'\nexport default Enemy\n","import React from 'react'\nimport Enemy from '../Enemy'\n\nconst EnemyArea = ({ name, ...props }) => {\n  return (\n    <div className=\"EnemyArea\">\n      <div className=\"EnemyArea-name\">{name}</div>\n      <div className=\"EnemyArea-card\">\n        <Enemy {...props} />\n      </div>\n    </div>\n  )\n}\n\nexport default EnemyArea\n","import EnemyArea from './EnemyArea'\nimport './EnemyArea.scss'\nexport default EnemyArea\n","const Arcanist = {\n  name: 'Arcanist',\n  skills: ['Blast', 'Protect', 'Unleash'],\n}\n\nexport default Arcanist\n","const Brawler = {\n  name: 'Brawler',\n  skills: ['Counter', 'Flurry', 'Tackle'],\n}\n\nexport default Brawler\n","const Elementalist = {\n  name: 'Elementalist',\n  skills: ['Burn', 'Freeze', 'Shock'],\n}\n\nexport default Elementalist\n","const Guardian = {\n  name: 'Guardian',\n  skills: ['Strike', 'Block', 'Grapple'],\n}\n\nexport default Guardian\n","const Ranger = {\n  name: 'Ranger',\n  skills: ['Evade', 'Hasten', 'Shoot'],\n}\n\nexport default Ranger\n","const Shadow = {\n  name: 'Shadow',\n  skills: ['Mimic', 'Misdirect', 'Sneak'],\n}\n\nexport default Shadow\n","const Squire = {\n  name: 'Squire',\n  skills: ['Accompany', 'Fetch', 'Resupply'],\n}\n\nexport default Squire\n","const Tactician = {\n  name: 'Tactician',\n  skills: ['Bolster', 'Coordinate', 'Inspire'],\n}\n\nexport default Tactician\n","// the Fisher-Yates shuffle in JS\n// randomize the contents of an Array\nconst shuffle = array => {\n  var i = 0,\n    j = 0,\n    temp = null\n\n  for (i = array.length - 1; i > 0; i -= 1) {\n    j = Math.floor(Math.random() * (i + 1))\n    temp = array[i]\n    array[i] = array[j]\n    array[j] = temp\n  }\n  return array\n}\n\nexport default shuffle\n","const tally = (array, item) =>\n  array.reduce((totalCount, element) => {\n    if (element === item) return totalCount + 1\n    else return totalCount\n  }, 0)\n\nexport default tally\n","import React, { PureComponent, Fragment } from 'react'\nimport * as DeckTypes from '../../data/DeckTypes'\nimport shuffle from '../../util/shuffle'\nimport tally from '../../util/tally'\n\nconst DrawPile = ({ skills, numberOfCards, onDraw }) => (\n  <Fragment>\n    <div className=\"Deck-skills\">{skills.join(',')}</div>\n    <div className=\"Deck-counters\">\n      <div className=\"Deck-deckSize\">Deck: {numberOfCards}</div>\n      {numberOfCards && <button onClick={onDraw}>Draw</button>}\n    </div>\n  </Fragment>\n)\n\nconst DiscardPile = ({ skills, skillsInDiscard, onFetch }) => (\n  <Fragment>\n    {skills.map(skill => (\n      <div className=\"Deck-discardCount\" key={Math.random()}>\n        {skill}: {tally(skillsInDiscard, skill)}{' '}\n        <button name={skill} onClick={onFetch}>\n          Fetch\n        </button>\n      </div>\n    ))}\n  </Fragment>\n)\n\nclass Deck extends PureComponent {\n  deckData = DeckTypes[this.props.type]\n\n  state = {\n    skillsInDeck: shuffle([\n      ...this.deckData.skills,\n      ...this.deckData.skills,\n      ...this.deckData.skills,\n      ...this.deckData.skills,\n      ...this.deckData.skills,\n    ]),\n    drawMode: true,\n  }\n\n  drawSkill = () => {\n    let deckContents = [...this.state.skillsInDeck]\n    if (!deckContents.length) return\n\n    let skill = deckContents.shift()\n    this.setState({ skillsInDeck: deckContents })\n    this.props.onDraw(skill)\n  }\n\n  fetchSkill = skill => {\n    console.log('fetching skill', skill)\n    let deckContents = [...this.state.skillsInDeck]\n    deckContents.unshift(skill)\n    this.setState({ skillsInDeck: deckContents })\n  }\n\n  onFetch = e => {\n    let skill = e.target.name\n    this.fetchSkill(skill)\n    this.props.onFetch(skill)\n  }\n\n  toggleDrawMode = () => this.setState({ drawMode: !this.state.drawMode })\n\n  render() {\n    if (this.deckData === undefined)\n      return <div>Unknown Deck Type: {this.props.type}</div>\n\n    return (\n      <div className=\"Deck\">\n        <div>\n          <div className=\"Deck-name\">{this.deckData.name}</div>\n          <button onClick={this.toggleDrawMode}>\n            View {this.state.drawMode ? 'Discard' : 'Deck'}\n          </button>\n        </div>\n        {this.state.drawMode ? (\n          <DrawPile\n            skills={this.deckData.skills}\n            numberOfCards={this.state.skillsInDeck.length}\n            onDraw={this.drawSkill}\n          />\n        ) : (\n          <DiscardPile\n            skills={this.deckData.skills}\n            skillsInDiscard={this.props.skillsInDiscard}\n            onFetch={this.onFetch}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Deck\n","import Deck from './Deck'\nimport './Deck.scss'\nexport default Deck\n","const Strike = {\n  title: 'Strike',\n  lines: [\n    'Deal 3 damage.',\n    'If you are engaged with the target, deal 5 damage instead.',\n  ],\n}\n\nexport default Strike\n","const Block = {\n  title: '⚡ Block',\n  lines: [\n    'Prevent up to 2 damage from an enemy attack.',\n    'If you Block a Forced Attacked, you are attacked instead and gain Inspiration.',\n  ],\n}\n\nexport default Block\n","const Grapple = {\n  title: 'Grapple',\n  lines: [\n    'Stun an enemy that attacked you this round.',\n    '~~ or ~~',\n    'Stun an enemy that is not engaged with another player.',\n  ],\n}\n\nexport default Grapple\n","const Shoot = {\n  title: 'Shoot',\n  lines: [\n    'Deal 3 damage.',\n    'If you took no damage this Round, deal 5 damage instead.',\n  ],\n}\n\nexport default Shoot\n","const Evade = {\n  title: '⚡ Evade',\n  lines: [\n    'Prevent 1 damage to you.',\n    '~~ and/or ~~',\n    'Prevent 1 status from being applied to you.',\n  ],\n}\n\nexport default Evade\n","const Hasten = {\n  title: 'Hasten',\n  lines: ['Draw 2 cards.', 'You may take another Action.'],\n}\n\nexport default Hasten\n","const Burn = {\n  title: 'Burn',\n  lines: [\n    'Scorch an enemy.',\n    'Deal 3 damage to each enemy for each Scorch on them.',\n    'Each enemy cannot be Scorched more than three times.',\n  ],\n}\n\nexport default Burn\n","const Freeze = {\n  title: 'Freeze',\n  lines: [\n    'Deal 3 damage and Chill the target.',\n    'If the target is already Chilled, Stun them instead.',\n  ],\n}\n\nexport default Freeze\n","const Shock = {\n  title: '⚡ Shock',\n  lines: [\n    'Draw a card.',\n    'Deal 2 damage to all Scorched enemies.',\n    'Prevent 2 damage from all Chilled enemies (if they are attacking).',\n  ],\n}\n\nexport default Shock\n","const Bolster = {\n  title: 'Bolster',\n  lines: [\n    'Restore 2 Health to any player.',\n    'Remove or duplicate 1 status on any player.',\n  ],\n}\n\nexport default Bolster\n","const Inspire = {\n  title: 'Inspire',\n  lines: ['All players draw a card and gain Inspiration.'],\n}\n\nexport default Inspire\n","const Coordinate = {\n  title: '⚡ Coordinate',\n  lines: [\n    'Play when an ally deals 5 or more damage to deal 5 damage.',\n    'You may target a different enemy.',\n  ],\n}\n\nexport default Coordinate\n","const Blast = {\n  title: 'Blast',\n  lines: ['Deal 4 damage.', 'If you discard this, draw a card'],\n}\n\nexport default Blast\n","const Unleash = {\n  title: 'Unleash',\n  lines: [\n    'Multi-target',\n    'Deal 2 damage. You may discard up to 2 cards to deal 3 more damage per card.',\n  ],\n}\n\nexport default Unleash\n","const Protect = {\n  title: '⚡ Protect',\n  lines: [\n    'Multi-target',\n    'Prevent 1 damage.',\n    'You may discard up to two cards to prevent 3 more damage per card.',\n  ],\n}\n\nexport default Protect\n","const Misdirect = {\n  title: '⚡ Misdirect',\n  lines: [\n    'Play when an enemy attacks to prevent up to 2 damage and deal 2 damage to a different enemy.',\n  ],\n}\n\nexport default Misdirect\n","const Sneak = {\n  title: 'Sneak',\n  body: 'If you are not engaged with an enemy, deal 6 damage.',\n}\n\nexport default Sneak\n","const Mimic = {\n  title: 'Mimic',\n  lines: [\n    \"While this is in your hand, treat it as if it were any card in an ally's hand\",\n  ],\n}\n\nexport default Mimic\n","const Flurry = {\n  title: 'Flurry',\n  lines: [\n    'Multi-target',\n    'Deal 1 damage.',\n    'Mill up to 5 cards to deal 1 more damage per card.',\n  ],\n}\n\nexport default Flurry\n","const Tackle = { title: 'Tackle', lines: ['Deal 6 damage.', 'Take 1 damage.'] }\n\nexport default Tackle\n","const Counter = {\n  title: '⚡ Counter',\n  lines: [\n    'Play when you are attacked to deal 2 damage to your attacker and draw a card.',\n    'If this damage defeats them, they deal no damage.',\n  ],\n}\n\nexport default Counter\n","const Fetch = {\n  title: 'Fetch',\n  lines: [\n    'Restore 1 Health to each player.',\n    'Each player may place 1 of their discarded cards (other than Fetch) on top of its deck.',\n  ],\n}\n\nexport default Fetch\n","const Accompany = {\n  title: '⚡ Accompany',\n  lines: [\n    'Play when an ally is attacked to prevent 1 damage, deal 1 damage to the attacker, and draw a card.',\n  ],\n}\n\nexport default Accompany\n","const Resupply = {\n  title: 'Resupply',\n  lines: ['An ally draws 2 cards.', 'You may take another Action.'],\n}\n\nexport default Resupply\n","import React from 'react'\nimport * as SkillTypes from '../../data/SkillTypes'\n\nconst Skill = ({ type, onPlay }) => {\n  const data = SkillTypes[type]\n  if (data === undefined) return <div>Unknown Skill Type: {type}</div>\n\n  let onClick = () => onPlay(type)\n\n  return (\n    <div className=\"Skill\">\n      <button className=\"Skill-play\" name={type} onClick={onClick}>\n        Play\n      </button>\n      <div className=\"Skill-title\">{data.title}</div>\n      <div className=\"Skill-body\">\n        {data.lines.map(line => (\n          <div className=\"Skill-bodyLine\" key={Math.random()}>\n            {line}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Skill\n","import Skill from './Skill'\nimport './Skill.scss'\nexport default Skill\n","import React, { PureComponent } from 'react'\nimport Deck from '../Deck'\nimport Skill from '../Skill'\n\nclass Player extends PureComponent {\n  state = {\n    skillsInHand: [],\n    skillsInDiscard: [],\n  }\n\n  addToHand = skill => {\n    let handContents = [...this.state.skillsInHand]\n    handContents.push(skill)\n    this.setState({ skillsInHand: handContents })\n  }\n\n  removeFromHand = skill => {\n    let handContents = [...this.state.skillsInHand]\n    let indexOfSkill = handContents.indexOf(skill)\n    handContents.splice(indexOfSkill, 1)\n    this.setState({ skillsInHand: handContents })\n  }\n\n  addToDiscard = skill => {\n    let discardContents = [...this.state.skillsInDiscard]\n    discardContents.push(skill)\n    this.setState({ skillsInDiscard: discardContents })\n  }\n\n  removeFromDiscard = skill => {\n    let discardContents = [...this.state.skillsInDiscard]\n    let indexOfSkill = discardContents.indexOf(skill)\n    discardContents.splice(indexOfSkill, 1)\n    this.setState({ skillsInDiscard: discardContents })\n  }\n\n  onDraw = skill => this.addToHand(skill)\n\n  onPlay = skill => {\n    this.removeFromHand(skill)\n    this.addToDiscard(skill)\n  }\n\n  onFetch = skill => this.removeFromDiscard(skill)\n\n  render = () => (\n    <div className=\"Player\">\n      <div className=\"Player-deck Player-deck--one\">\n        <Deck\n          type={this.props.deckOneType}\n          skillsInDiscard={this.state.skillsInDiscard}\n          onDraw={this.onDraw}\n          onFetch={this.onFetch}\n        />\n      </div>\n\n      <div className=\"Player-deck Player-deck--two\">\n        <Deck\n          type={this.props.deckTwoType}\n          skillsInDiscard={this.state.skillsInDiscard}\n          onDraw={this.onDraw}\n          onFetch={this.onFetch}\n        />\n      </div>\n\n      <div className=\"Player-hand\">\n        {this.state.skillsInHand.sort().map(type => (\n          <Skill type={type} onPlay={this.onPlay} key={Math.random()} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Player\n","import Player from './Player'\nimport './Player.scss'\nexport default Player\n","import React from 'react'\nimport Player from '../Player'\n\nconst PlayerArea = ({ name, ...props }) => {\n  return (\n    <div className=\"PlayerArea\">\n      <div className=\"PlayerArea-name\">{name}</div>\n\n      <Player {...props} />\n    </div>\n  )\n}\n\nexport default PlayerArea\n","import PlayerArea from './PlayerArea'\nimport './PlayerArea.scss'\nexport default PlayerArea\n","import React, { PureComponent } from 'react'\nimport EnemyArea from '../EnemyArea'\nimport PlayerArea from '../PlayerArea'\n\nconst AppContext = React.createContext({})\n\nclass App extends PureComponent {\n  state = {\n    playerOne: {\n      deckOneType: 'Guardian',\n      deckTwoType: 'Tactician',\n      skillsInHand: [],\n    },\n    playerTwo: {\n      deckOneType: 'Ranger',\n      deckTwoType: 'Elementalist',\n      skillsInHand: [],\n    },\n    playerThree: {\n      deckOneType: 'Arcanist',\n      deckTwoType: 'Shadow',\n      skillsInHand: [],\n    },\n    playerFour: {\n      deckOneType: 'Brawler',\n      deckTwoType: 'Squire',\n      skillsInHand: [],\n    },\n    enemyOne: {\n      type: 'Monster1',\n      damageTaken: 0,\n    },\n    enemyTwo: {\n      type: 'Monster1',\n      damageTaken: 0,\n    },\n    enemyThree: {\n      type: 'Monster1',\n      damageTaken: 0,\n    },\n  }\n\n  render = () => (\n    <AppContext.Provider value={this}>\n      <div className=\"App\">\n        <h1 className=\"App-heading\">Welcome to Tairos</h1>\n\n        <p>Coming Soon...</p>\n\n        <div className=\"App-content\">\n          <div className=\"App-contentArea App-contentArea--enemies\">\n            <EnemyArea name=\"enemy-one\" {...this.state.enemyOne} />\n            <EnemyArea name=\"enemy-two\" {...this.state.enemyTwo} />\n            <EnemyArea name=\"enemy-three\" {...this.state.enemyThree} />\n          </div>\n\n          <div className=\"App-contentArea App-contentArea--players\">\n            <PlayerArea name=\"player-one\" {...this.state.playerOne} />\n            <PlayerArea name=\"player-two\" {...this.state.playerTwo} />\n            <PlayerArea name=\"player-three\" {...this.state.playerThree} />\n            <PlayerArea name=\"player-four\" {...this.state.playerFour} />\n          </div>\n        </div>\n      </div>\n    </AppContext.Provider>\n  )\n}\n\nexport { App as default, AppContext }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nimport './index.scss'\nimport './vendor/normalize.scss'\n\nconst main = document.querySelector('[react-app]')\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  main\n)\n"],"sourceRoot":""}